{"version":3,"sources":["fbb.js","components/MainApp.js","apiLinks/netlifyServerless.js","components/Home.js","components/Confirm.js","components/Sell.js","components/Navigationbar.js","App.js","reportWebVitals.js","index.js"],"names":["firestore","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","analytics","MainApp","React","useState","books","setBooks","useEffect","collection","onSnapshot","snapshot","data","docs","map","doc","id","mappedBooks","book","BookList","style","textDecoration","className","props","email","name","title","price","sold","onClick","promptMessage","concat","alertify","error","prompt","evt","value","msg","bookTitle","totalSale","preHeader","userEm","console","log","axios","headers","method","url","params","then","response","success","catch","set","boughtBy","merge","ok","cancel","Home","href","Component","Confirm","Sell","sendBooks","e","a","preventDefault","booksRef","state","userName","userBookTitle","userClass","userPrice","add","class","CreatedAt","FieldValue","serverTimestamp","docRef","submitID","setState","submitKeyid","submitted","bookID","handleChange","bind","event","target","this","Form","onSubmit","Group","controlId","Label","Control","type","placeholder","onChange","Text","Button","variant","Navigationbar","Nav","defaultActiveKey","Item","Link","eventKey","exact","path","component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.687a750f.chunk.js","sourcesContent":["import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nimport 'firebase/analytics';\n\nvar firebaseConfig = {\n  apiKey: \"AIzaSyCQ1QksR2lqnbWdSBSb7Z0Hec7vYgwtuP4\",\n  authDomain: \"studentsmarket-6a095.firebaseapp.com\",\n  projectId: \"studentsmarket-6a095\",\n  storageBucket: \"studentsmarket-6a095.appspot.com\",\n  messagingSenderId: \"787165538985\",\n  appId: \"1:787165538985:web:02b113ae272e6ff87457b8\",\n  measurementId: \"G-Y8QJ0RGJYC\"\n};\n  // // Initialize Firebase\nconst app = firebase.initializeApp(firebaseConfig);\nconst analytics = firebase.analytics();\nconst firestore = firebase.firestore();\n\nexport {app, analytics, firestore}\n\n","import React, {useRef, useState} from 'react';\nimport {app, firestore, analytics} from '../fbb';\nimport firebase from 'firebase/app';\nimport alertify from 'alertifyjs';\nimport '../media/alertify.min.css';\nimport {soldEmail} from '../apiLinks/netlifyServerless';\nimport axios from 'axios';\nimport qs from 'qs';\nfunction MainApp() {\n\n  const [books, setBooks] = React.useState([]);\n\n  React.useEffect(() => {\n\tconst unsubscribe = firestore\n      .collection(\"Books\")\n      .onSnapshot((snapshot) => {\n        const data = snapshot.docs.map((doc) => ({\n          id: doc.id,\n          ...doc.data(),\n        }));\n\t\tsetBooks(data);\n      });\n  }, []);\n  const mappedBooks = books.map(book => <BookList key={book.id} book={book} style={{textDecoration: 'none'}}/> )\n  \n  return (\n    <div className=\"BookCollection\">\n      <h1>\n        Our Books\n      </h1>\n      <div className=\"book-item-cont\">\n      {mappedBooks}\n      </div>\n\n    </div>\n  )\n}\nexport default MainApp;\n\nfunction BookList(props) {\n  const {name, email, title, id, price, sold } = props.book;\n  const returnClickedBook = () =>{\n    var promptMessage = \"\";\n    promptMessage = promptMessage.concat(\"Would you like to buy \", title, \" for: \", price, \"VND?\" );\n    if(sold) {\n      alertify.error('The selected book has already been sold');\n    } else {\n      alertify.prompt( title, promptMessage, 'Your Name'\n      , function(evt, value) { \n\n        const msg = {\n          bookTitle: title,\n          totalSale: price,\n          preHeader: \"Congrats your book was sold!\",\n          userEm: email\n        };\n        console.log(msg);\n        axios({\n          headers: { \n              'content-type': 'application/json'\n          },\n          method: 'post',\n          url: soldEmail,\n          params: msg,\n        })\n      .then((response) => alertify.success('Your request was successful, please place your money for the book in the box and take the book you have bought.'))\n      .catch((error) => alertify.error(error));\n        // fetch(soldEmail, msg).then(response => response.json).then(jsondata => console.log(jsondata))\n        firestore.collection(\"Books\").doc(id).set({\n          sold: true, \n          boughtBy: value,\n        }, {merge: true,}) \n      }\n      , function() { alertify.error('Cancelled') \n     \n     }).set('labels', {ok: \"Confirm\", cancel:\"Nevermind\"});\n\n    }\n\n    // alertify.prompt(title, promptMessage.concat(\"Would you like to buy \", name, \"'s book for: \", price, \"VND?\" ), \"Your Name\")\n  \n\n\n  }\n  return(\n    <>\n      <div className=\"book-item\">\n        <button onClick={returnClickedBook}>\n        <h1>{title}</h1>\n        <p>{email}</p>\n        <p className={sold ? \"sold\": \"available\"}>{sold ? \"Sold\": \"Available\"}</p>\n        <p>{price} VND</p>\n        </button>\n      </div>\n    </>\n  )\n}\n","const bookListed = \"https://talktown.netlify.app/.netlify/functions/bookListed\";\nconst soldEmail = \"https://talktown.netlify.app/.netlify/functions/soldEmail\";\n\nexport {bookListed, soldEmail};","import React, { Component } from 'react'\n\nexport default class Home extends Component {\n    render() {\n        return (\n            <div className=\"home\">\n                This project is open source at <a href=\"https://github.com/Sirbot9988/StudentsMarket\">My Github</a>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\n\nexport default class Confirm extends Component {\n    constructor(props) {\n        super(props);\n        this.props = props\n    }\n\n    render() {\n        return (\n            <div className=\"confirmation-page\">\n                <h1>Congratulations your book has been listed!</h1>\n                <p>You may now close this tab, an email will be sent to your specified email address with a confirmation of your listing and \n                    your listing id. <br/>\n                    When your book is sold, a member from talktown will reach you in either form time, break time or lunch time. Please show them your ID to confirm you are the seller of the book. <br />\n                    Do NOT share your ID to anyone you dont trust! \n                </p>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport {app, firestore, analytics} from '../fbb';\nimport {Form, Button} from 'react-bootstrap';\nimport Confirm from './Confirm';\nimport firebase from 'firebase';\nimport axios from 'axios';\nimport {bookListed} from '../apiLinks/netlifyServerless';\nimport alertify from 'alertifyjs';\nexport default class Sell extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {userEm: '',\n    userName: '',\n    userClass: '',\n    userBookTitle: '',\n    submitted: false,\n    userPrice: 0,\n    submitKeyid: ''\n    };\n    \n        this.handleChange = this.handleChange.bind(this);\n        this.sendBooks = this.sendBooks.bind(this);\n      }\n    \n    handleChange(event) {\n        const value = event.target.value;\n        this.setState({\n            ...this.state,\n            [event.target.name]: value,\n        })\n    }\n    \n\n    sendBooks = async(e) => {\n        e.preventDefault();\n        var submitID;\n        var submitSucc = false;\n        const booksRef = firestore.collection(\"Books\");\n        const {userName, userBookTitle, userClass, userEm, userPrice} = this.state\n        \n        if(userName && userBookTitle && userClass && userEm && userPrice) {\n            // Add book to firebase DB \n            await booksRef.add({\n                name: userName,\n                email: userEm,\n                class: userClass,\n                title: userBookTitle,\n                sold: false,\n                price: userPrice,\n                boughtBy: \"\",\n                CreatedAt: firebase.firestore.FieldValue.serverTimestamp(),\n            }).then(function(docRef) {\n                submitID = docRef.id;\n                submitSucc = true;\n                \n                \n            }).catch(function(error) {\n            console.log(\"There was an error contacting the DB\");\n            })\n            this.setState({\n                submitKeyid: submitID,\n                submitted: true,\n            })\n            const msg = {\n                bookTitle: userBookTitle,\n                totalSale: userPrice,\n                preHeader: \"Congrats your book was listed successfully!\",\n                userEm: userEm,\n                bookID: this.state.submitKeyid,\n            };\n            // send email to API Endpoint\n            axios({\n                headers: { \n                    'content-type': 'application/json'\n                },\n                method: 'post',\n                url: bookListed,\n                params: msg,\n              })\n            .then((response) => alertify.success('Your request was successful'))\n            .catch((error) => alertify.error(error));\n\n        }\n\n    }\n\n        render() {\n            if(!this.state.submitted) {\n            return (\n                <div className=\"sell\">\n                    <Form onSubmit={this.sendBooks} className=\"SellForm\">\n                        <Form.Group controlId=\"formBasicBookTitle\">\n                            <Form.Label>Book Title</Form.Label>\n                            <Form.Control type=\"text\" placeholder=\"Little Red Riding Hood\"  value={this.state.userBookTitle} onChange={this.handleChange} name=\"userBookTitle\"/>\n                            <Form.Text className=\"text-muted\">\n                            </Form.Text>\n                        </Form.Group>\n    \n                        <Form.Group controlId=\"formBasicEmail\">\n                            <Form.Label>Email</Form.Label>\n                            <Form.Control type=\"email\" placeholder=\"sangwoo23@renaissance.edu.vn\" value={this.state.userEm} onChange={this.handleChange} name=\"userEm\"/>\n                        </Form.Group>\n                        <Form.Group controlId=\"formBasicClass\">\n                            <Form.Label>Class</Form.Label>\n                            <Form.Control type=\"text\" placeholder=\"11W\"  value={this.state.userClass} onChange={this.handleChange} name=\"userClass\"/>\n                        </Form.Group>\n                        <Form.Group controlId=\"formBasicName\">\n                            <Form.Label>Name</Form.Label>\n                            <Form.Control type=\"text\" placeholder=\"Sang Woo\" value={this.state.userName} onChange={this.handleChange} name=\"userName\"/>\n                        </Form.Group>\n                        <Form.Group controlId=\"formBasicName\">\n                            <Form.Label>Price in VND</Form.Label>\n                            <Form.Control type=\"number\" placeholder=\"96000\" value={this.state.userPrice} onChange={this.handleChange} name=\"userPrice\"/>\n                        </Form.Group>\n                        <Button variant=\"primary\" type=\"submit\">\n                            Submit\n                        </Button>\n                        <p className=\"disclaimer\">\n                        Please be advised, Talktown will take a 5% commission off of your sale. <br />\n                        A confirmation letter will be sent to your email, naming the details of your <br/>sale(including how much talktown will take from your sale) <br/>\n                        In the next few days, a member from talktown will contact you to find you and give you your payment <br/>\n                        either in lunch, break or ECA time.\n\n\n                    </p>\n                    </Form>\n\n                    \n                </div>\n            )\n            \n        } else {\n            return(\n                <>\n                    <Confirm submitID={this.state.submitKeyid}/>\n                </>\n            )\n        }\n        }\n\n\n}\n","import React, { Component } from 'react'\nimport {Navbar, Nav, NavItem, NavDropdown, MenuItem} from 'react-bootstrap';\nimport '../media/bootstrap.min.css';\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\nimport Home from './Home';\nimport MainApp from './MainApp';\nimport Sell from './Sell';\nimport '../media/myStyles.scss';\n\nexport default class Navigationbar extends Component {\n    render() {\n        return (\n            <Router>\n                <Nav variant=\"pills \" defaultActiveKey=\"/home\" className=\"navBar-sw\">\n                    <Nav.Item>\n                        <Nav.Link href=\"/\">Home</Nav.Link>\n                    </Nav.Item>\n                    <Nav.Item>\n                        <Nav.Link href=\"/app\" eventKey=\"link-1\">Buy Books</Nav.Link>\n                    </Nav.Item>\n                    <Nav.Item>\n                        <Nav.Link href=\"/sell\" eventKey=\"disabled\">\n                        Sell Books\n                        </Nav.Link>\n                    </Nav.Item>\n                </Nav>\n\n                <Switch>\n                    <Route exact path=\"/\" component={Home}/>  \n                    <Route path=\"/app\" component={MainApp} />\n                    <Route path=\"/sell\" component={Sell}/>\n                </Switch>  \n            </Router>\n\n        )\n    }\n}\n","import React, {useRef, useState, Component} from 'react';\nimport MainApp from './components/MainApp';\nimport Home from './components/Home'\n\nimport styled from 'styled-components';\nimport './media/myStyles.scss';\nimport Navigationbar from './components/Navigationbar';\n\n\n\nclass App extends Component {\n\n  render() {\n    return (\n      <>\n        <Navigationbar/>\n\n        \n      </>\n    \n    )\n  }\n}\n\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}